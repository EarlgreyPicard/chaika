<?xml version="1.0"?>

<bindings id="b2rstatusbarBindings"
		xmlns="http://www.mozilla.org/xbl"
		xmlns:xbl="http://www.mozilla.org/xbl"
		xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">


<binding id="b2rstatusbar">
	<content>
		<xul:toolbarbutton anonid="btnGoToBoard" class="b2rstatusbar-button"
				label="スレ一覧" tooltiptext="スレッド一覧を開く"/>
		<xul:toolbarbutton anonid="btnWrite" class="b2rstatusbar-button"
				label="書き込み" tooltiptext="このスレッドに書き込む"/>
		<xul:toolbarbutton anonid="btnDeleteLog" class="b2rstatusbar-button"
				label="ログ削除" tooltiptext="このスレッドのログを削除"/>

		<xul:toolbarbutton anonid="btnViewChange" type="menu" class="b2rstatusbar-button"
				label="View">
			<xul:menupopup anonid="popViewChange" position="before_end">
				<xul:menuitem label="すべて" anonid="mnuViewAll"/>
				<xul:menuitem label="最新 100件" anonid="mnuViewL100"/>
				<xul:menuitem label="最新 50件" anonid="mnuViewL50"/>
				<xul:menuseparator/>
				<xul:menuitem label="ブラウザで開く" anonid="mnuViewBroser"/>
			</xul:menupopup>
		</xul:toolbarbutton>

		<xul:toolbarbutton anonid="btnAboneManager" class="b2rstatusbar-button"
				label="あぼーんマネージャ" tooltiptext="あぼーんマネージャを開く"/>
	</content>

	<resources>
		<stylesheet src="chrome://chaika/skin/fx-statusbar.css"/>
	</resources>

	<implementation>
		<constructor><![CDATA[
			Components.utils.import("resource://chaika-modules/ChaikaCore.js");
			Components.utils.import("resource://chaika-modules/ChaikaThread.js");
		]]></constructor>

		<method name ="showCheck">
			<body><![CDATA[
				this.hidden = (this._getCurrentThreadURL() == null);
			]]></body>
		</method>

		<method name ="_getCurrentThreadURL">
			<body><![CDATA[
				var currentURI = null;
				try{
					currentURI = getBrowser().currentURI.QueryInterface(Ci.nsIURL);
				}catch(ex){
					return null;
				}
				if(!(currentURI.host == "localhost" || currentURI.host == "127.0.0.1")) return null;
				if(currentURI.path.substring(0, 8) != "/thread/") return null;

				var ioService = Cc["@mozilla.org/network/io-service;1"].getService(Ci.nsIIOService);
				var threadURL = null;
				try{
					 threadURL = ioService.newURI(currentURI.path.substring(8), null, null)
							 .QueryInterface(Ci.nsIURL);					
				}catch(ex){
					ChaikaCore.logger.error(ex);
				}
				
				return threadURL;
			]]></body>
		</method>

		<method name ="_doCommand">
			<parameter name="aEvent"/>
			<body><![CDATA[
				var targetElement = aEvent.originalTarget;
				var anonymousID = targetElement.getAttribute("anonid");
				switch(anonymousID){
					case "btnGoToBoard":
						this._goToBoard(false);
						break;
					case "btnWrite":
						this._write();
						break;
					case "btnDeleteLog":
						this._deleteLog();
						break;
					case "mnuViewAll":
						this._viewChange("./", false);
						break;
					case "mnuViewL100":
						this._viewChange("./l100", false);
						break;
					case "mnuViewL50":
						this._viewChange("./l50", false);
						break;
					case "mnuViewBroser":
						this._viewBrowser(false);
						break;
					case "btnAboneManager":
						this._openAboneManager();
						break;
				}
			]]></body>
		</method>

		<method name ="_doMiddleClick">
			<parameter name="aEvent"/>
			<body><![CDATA[
				var targetElement = aEvent.originalTarget;
				var anonymousID = targetElement.getAttribute("anonid");
				switch(anonymousID){
					case "btnGoToBoard":
						this._goToBoard(true);
						break;
					case "mnuViewAll":
						this._viewChange("./", true);
						break;
					case "mnuViewL100":
						this._viewChange("./l100", true);
						break;
					case "mnuViewL50":
						this._viewChange("./l50", true);
						break;
					case "mnuViewBroser":
						this._viewBrowser(true);
						break;
				}
			]]></body>
		</method>


		<method name ="_goToBoard">
			<parameter name="aAddTab"/>
			<body><![CDATA[
				var threadURL = this._getCurrentThreadURL();
				if(!threadURL) return;

				var boardURL = ChaikaThread.getBoardURL(threadURL);
				ChaikaCore.browser.openBoard(boardURL, aAddTab);
			]]></body>
		</method>

		<method name ="_write">
			<body><![CDATA[
				var threadURL = this._getCurrentThreadURL();
				if(!threadURL) return;

				var postWizardURLSpec = "chrome://chaika/content/post/wizard.xul";
				var threadPlainURL = (new ChaikaThread(threadURL)).plainURL;
				window.openDialog(postWizardURLSpec, "_blank",
							"chrome, resizable, dialog", threadPlainURL.spec);
			]]></body>
		</method>

		<method name ="_deleteLog">
			<body><![CDATA[
				var threadURL = this._getCurrentThreadURL();
				if(!threadURL) return;

				var promptService = Components.classes["@mozilla.org/embedcomp/prompt-service;1"]
							.getService(Components.interfaces.nsIPromptService);
				var result = promptService.confirm(null, "ログの削除 [chaika]",
								"このスレッドのログを削除しますか?");
				if(!result) return;

				try{
					var thread = new ChaikaThread(threadURL);
					thread.deteleThreadData();
				}catch(ex){
					ChaikaCore.logger.error(ex);
				}
			]]></body>
		</method>

		<method name ="_viewBrowser">
			<parameter name="aAddTab"/>
			<body><![CDATA[
				var popViewChange = document
						.getAnonymousElementByAttribute(this, "anonid", "popViewChange");
				popViewChange.hidePopup();

				var threadURL = this._getCurrentThreadURL();
				if(!threadURL) return;
				ChaikaCore.browser.openThread(threadURL, aAddTab, false, true);
			]]></body>
		</method>

		<method name ="_viewChange">
			<parameter name="aOption"/>
			<parameter name="aAddTab"/>
			<body><![CDATA[
				var popViewChange = document
						.getAnonymousElementByAttribute(this, "anonid", "popViewChange");
				popViewChange.hidePopup();

				var threadURL = this._getCurrentThreadURL();
				if(!threadURL) return;

				var ioService = Cc["@mozilla.org/network/io-service;1"].getService(Ci.nsIIOService);
				try{
					var threadPlainURL = (new ChaikaThread(threadURL)).plainURL;
					threadURL = ioService.newURI(aOption, null, threadPlainURL);
					ChaikaCore.browser.openThread(threadURL, aAddTab, false, false);
				}catch(ex){
					ChaikaCore.logger.error(ex);
				}
			]]></body>
		</method>

		<method name ="_openAboneManager">
			<body><![CDATA[
				var aboneManagerURL = "chrome://chaika/content/settings/abone-manager.xul";
				window.openDialog(aboneManagerURL, "_blank", "chrome, resizable, toolbar");
			]]></body>
		</method>

	</implementation>

	<handlers>
		<handler event="command" action="this._doCommand(event)"/>
		<handler event="click" button="1" action="this._doMiddleClick(event)"/>
	</handlers>
</binding>


</bindings>